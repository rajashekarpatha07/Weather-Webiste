<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
   <style>
    
body {
    font-family: 'Arial', sans-serif;
    background-color: #fafafa;  /* Light background */
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}

header {
    text-align: center;
    margin-bottom: 3rem;
    color: #333; /* Darker color for text */
}

header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
}

header p {
    color: #555; /* Slightly lighter color for description */
    font-size: 1rem;
}

/* Loading Bar */
.loading-bar-container {
    width: 100%;
    max-width: 500px;
    margin: 1rem auto;
    display: none; /* Initially hidden */
}

.loading-bar {
    height: 4px;
    width: 0;
    background-color: #4CAF50;
    border-radius: 4px;
    animation: loading 2s linear infinite;
}

@keyframes loading {
    0% {
        width: 0;
    }
    50% {
        width: 50%;
    }
    100% {
        width: 100%;
    }
}


.form-container {
    width: 100%;
    max-width: 500px; /* Restricting max width for better layout */
    padding: 0 20px;
    margin-bottom: 2rem;
}

.form-container input[type="text"] {
    padding: 12px 15px;
    width: 100%;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1rem;
    color: #333;
    background-color: #fff;
    margin-bottom: 1rem;
    box-sizing: border-box;
}

.form-container button {
    padding: 12px 18px;
    color: #fff;
    background-color: #4CAF50; /* Subtle green */
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    width: 100%;
    box-sizing: border-box;
}

.form-container button:hover {
    background-color: #45a049; /* Slightly darker green for hover effect */
}

.weather-info {
    margin-top: 2rem;
    text-align: center;
    color: #333;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #fff;
    width: 100%;
    max-width: 500px;
    box-sizing: border-box;
}

.weather-info h2 {
    margin-top: 0;
    font-size: 1.5rem;
    font-weight: 600;
}

.weather-info p {
    font-size: 1rem;
    margin: 0.5rem 0;
}

.links {
    margin-top: 2rem;
}

.links a {
    margin: 0 0.5rem;
    color: #4CAF50; /* Green for links */
    text-decoration: none;
    font-size: 1rem;
    padding: 0.5rem 1rem;
    border: 1px solid #4CAF50;
    border-radius: 4px;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.links a:hover {
    background-color: #4CAF50;
    color: #fff;
}

/* Responsive Design */

@media (max-width: 768px) {
    header h1 {
        font-size: 2rem;
    }

    .form-container {
        width: 90%;
        padding: 0 10px;
    }

    .form-container input[type="text"],
    .form-container button {
        font-size: 1rem;
    }

    .weather-info {
        width: 90%;
        padding: 15px;
    }

    .links a {
        font-size: 0.9rem;
        padding: 0.4rem 0.8rem;
    }
}

@media (max-width: 480px) {
    header h1 {
        font-size: 1.5rem;
    }

    .form-container input[type="text"],
    .form-container button {
        font-size: 0.9rem;
    }

    .weather-info {
        width: 90%;
        padding: 10px;
    }

    .links a {
        font-size: 0.8rem;
        padding: 0.3rem 0.6rem;
    }
}

   </style>
</head>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="/css/styles.css">  <!-- Link to external CSS file -->
</head>
<body>
    <header>
        <h1>{{title}}</h1>
        <p>Enter your location below to get real-time weather updates!</p>
    </header>

    <div class="form-container">
        <form id="weatherForm" action="/weather" method="GET">
            <input type="text" id="addressInput" name="address" placeholder="Enter your location..." required>
            <button type="submit">Get Weather</button>
        </form>
    </div>

    <!-- Loading Bar -->
    <div class="loading-bar-container" id="loadingBarContainer">
        <div class="loading-bar" id="loadingBar"></div>
    </div>

    <div class="weather-info" id="weatherInfo">
        <!-- Weather data will be displayed here -->
    </div>

    <div class="links">
        <a href="/about">About</a>
        <a href="/help">Help</a>
    </div>

    <!-- Link to external JavaScript -->
    <script src="/js/app.js"></script>
</body>

</html>
<script>
console.log("Client Side JavaScript");

const weatherForm = document.getElementById('weatherForm');
const addressInput = document.getElementById('addressInput');
const weatherInfo = document.getElementById('weatherInfo');
const loadingBarContainer = document.getElementById('loadingBarContainer');

weatherForm.addEventListener('submit', (e) => {
    e.preventDefault();

    const address = addressInput.value;

    // Show the loading bar
    loadingBarContainer.style.display = 'block';
    weatherInfo.innerHTML = ''; // Clear previous weather info

    fetch(`/weather?address=${address}`)
        .then((response) => {
            if (!response.ok) {
                throw new Error('Unable to fetch weather data');
            }
            return response.json();
        })
        .then((data) => {
            // Hide the loading bar
            loadingBarContainer.style.display = 'none';

            if (data.error) {
                weatherInfo.innerHTML = `<p style="color: red;">Error: ${data.error}</p>`;
            } else {
                weatherInfo.innerHTML = `
                    <h2>Weather in ${data.location}</h2>
                    <p><strong>Temperature:</strong> ${data.forecast.temp}°C</p>
                    <p><strong>Feels Like:</strong> ${data.forecast.feelslike}°C</p>
                    <p><strong>Conditions:</strong> ${data.forecast.description}</p>
                `;
            }
        })
        .catch((error) => {
            // Hide the loading bar and display the error
            loadingBarContainer.style.display = 'none';
            console.error('Error:', error);
            weatherInfo.innerHTML = `<p style="color: red;">Error: ${error.message}</p>`;
        });
});
</script>
</body>
</html>
